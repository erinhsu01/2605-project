Chard Gerhard, Erin Hsu, Michael Sharpe
11/24/15
Part 1F

	Firstly, from a purely computational point of view, computing inverse matrices is a very expensive procedure. QR and LU
decomposition are each quicker to perform than inverting a matrix, with much fewer comparison operations to calculate. While it 
may not make much of a difference in this limited context, this inefficiency can become very computationally taxing with each 
increase in the size of a matrix. Even the most efficient algorithms require more than O(N^2) operations for an N by N matrix, 
with exponential complexity representing this increasing inefficiency. In the context of complex calculations where matrices can
have dimensions of hundreds or thousands of numbers, this could represent a major processing bottleneck, especially when other 
functions need to be run at the same time. Using QR or LU factorization can reduce this complexity, and while it still cannot 
reach the goal of linear time, the complexity can still be reduced by almost a third. This speed increase and reduction of 
complexity are major reasons to use QR and LU decomposition, but the primary benefit of using factorization over inverse 
matrices is the reduction in error. These methods require fewer transformations, which in turn reduces the potential for error, 
and the resulting upper triangle matrices allow for a great deal of flexibility. This system can be solved very quickly with 
backwards substitution, and with a condition number of one, the error is optimally minimized. As such, using QR and LU factoriza
tion methods are the most optimal ways of solving linear systems for their reduction in computational complexity and their 
reduction of error, which yield increasing benefits as the size of matrices increases.
